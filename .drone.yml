pipeline:
  #restore-cache:
  #  image: drillster/drone-volume-cache
  #  restore: true
  #  mount:
  #    - ./migration_tool
  #  volumes:
  #    - /tmp/cache:/cache

  build:
    image: frekele/ant
    secrets: [ sfusername, sfpass ]
    commands:
      - /bin/sh get_migration_tool_file.sh
      - ant -lib migration_tool/ant-salesforce.jar -Dusername=$${SFUSERNAME} -Dpassword=$${SFPASS}
      - ls

  notify-when-validation-error:
    image: drillster/drone-email
    host: smtp.gmail.com
    from: buildserverdroneio@example.com
    username: $EMAIL_PASSWORD
    password: $EMAIL_USERNAME
    recipients: $EMAIL_RECIPIENTS
    subject: Validation process failed
    secrets: [ email_username, email_password, email_recipients ]
    when:
      status: failure

  retrieve-profiles-from-int:
    image: frekele/ant
    secrets: [ sfusername, sfpass ]
    commands:
      - cd profile_migration
      - ls      
      - ant -lib ../migration_tool/ant-salesforce.jar -Dusername=$${SFUSERNAME} -Dpassword=$${SFPASS}
      - ls

  get-and-save-profiles:
    image: docker:git
    secrets: [ gituser, gituser_name, githubtoken ]
    commands:
      - git status
#      - git config user.email "$${GITUSER}"
 #     - git config user.email
  #    - git config user.name "$${GITUSER_NAME}"
   #   - git config user.name
    #  - git config remote.origin.url https://karolkotwica:$${GITHUBTOKEN}@github.com/karolkotwica/dronetest2.git
    #  - cd clonedrepo
    #  - ls
      # - cd profile_migration
      # - ant -lib ../migration_tool/ant-salesforce.jar -Dusername=$${SFUSERNAME} -Dpassword=$${SFPASS}
      # - cd ..      
      # - git add clonedrepo/logo198.png
      #- git remote -v
      #- git commit -m "test commit from drone [CI SKIP]"      
      #- git push origin master

#  rebuild-cache:
#    image: drillster/drone-volume-cache
#    rebuild: true
#    mount:
#      - ./migration_tool
#    volumes:
#      - /tmp/cache:/cache

  auto-tests:
    image: nightwatch2
    secrets: [ dashusername, dashpass ]
    commands:
      - export DASH_LOGIN=$${DASHUSERNAME}
      - export DASH_PASS=$${DASHPASS}
      # - nightwatch tests
      - pwd

  notify-when-e2e-tests-error:
    image: drillster/drone-email
    host: smtp.gmail.com
    from: buildserverdroneio@example.com
    username: $EMAIL_PASSWORD
    password: $EMAIL_USERNAME
    recipients: $EMAIL_RECIPIENTS
    subject: E2E testing failed
    secrets: [ email_username, email_password, email_recipients ]
    when:
      status: failure      

#services:
#  selenium:
#    image: selenium/standalone-chrome