pipeline:
  restore-cache:
    image: drillster/drone-volume-cache
    restore: true
    mount:
      - ./migration_tool
    volumes:
      - /tmp/cache:/cache
    when:
      event: [ push, tag ]

  build:
    image: frekele/ant
    secrets: [ sfusername, sfpass ]
    commands:
      - /bin/sh get_migration_tool_file.sh
      - /bin/bash pipe.sh
      - ant -lib migration_tool/ant-salesforce.jar -Dusername=$${SFUSERNAME} -Dpassword=$${SFPASS} 2>&1 > output.html
      # 2>> output.html      
      # 2>&1 | tee -a output.html 
    when:
      event: [ push, tag ]

  notify-when-validation-error:
    image: drillster/drone-email
    secrets: [ email_username, email_password, email_recipients ]
    host: smtp.gmail.com
    from: buildserverdroneio@example.com
    username: $EMAIL_PASSWORD
    password: $EMAIL_USERNAME
    recipients: $EMAIL_RECIPIENTS
    subject: Validation process failed
    body: file:///drone/src/github.com/karolkotwica/dronetest2/output.html
    when:
      status: failure

#  retrieve-profiles-from-int:
#    image: frekele/ant
#    secrets: [ sfusername, sfpass ]
#    commands:
#      - cd profiles
#      - rm -f *
#     - ls
#      - cd ../prof_backup
#      - cat package2.xml
#      - pwd
#      - ant -lib ../migration_tool/ant-salesforce.jar -Dusername=$${SFUSERNAME} -Dpassword=$${SFPASS}
#      - cat package2.xml
#      - cd retrieveOutput
#      - ls
#      - cd profiles
#      - pwd
#      - ls
#      - cat Admin.profile
#      #- cp * ../../profiles
#      # - cd ../../profiles
#      # - cat Admin.profile
#      - pwd
#      - ls
#    when:
#      event: [ push, tag ]

#  get-and-save-profiles:
#    image: docker:git
#    secrets: [ gituser, gituser_name, githubtoken, githubtoken2 ]    
#    commands:
#      - pwd
#      - ls
#      - git config user.email "$${GITUSER}"
#      - git config user.email
#      - git config user.name "$${GITUSER_NAME}"
#      - git config user.name
#      - git config remote.origin.url https://$${GITUSER_NAME}:$${GITHUBTOKEN}@github.com/$${GITUSER_NAME}/dronetest2.git
#       - /bin/sh prof_backup.sh
#    when:
#      event: [ push, tag ]

  rebuild-cache:
    image: drillster/drone-volume-cache
    rebuild: true
    mount:
      - ./migration_tool
    volumes:
      - /tmp/cache:/cache
    when:
      event: [ push, tag ]

  auto-tests:
    image: nightwatch2
    secrets: [ dashusername, dashpass ]
    commands:
      - export DASH_LOGIN=$${DASHUSERNAME}
      - export DASH_PASS=$${DASHPASS}
      - nightwatch --verbose tests 2>> output.html
      - pwd
    when:
      event: [ push, tag ]

  notify-when-e2e-tests-error:
    image: drillster/drone-email
    host: smtp.gmail.com
    from: buildserverdroneio@example.com
    username: $EMAIL_PASSWORD
    password: $EMAIL_USERNAME
    recipients: $EMAIL_RECIPIENTS
    subject: E2E testing failed
    secrets: [ email_username, email_password, email_recipients ]
    body: file:///drone/src/github.com/karolkotwica/dronetest2/output.html
    when:
      status: failure      

services:
  selenium:
    image: selenium/standalone-chrome